Unable to query physical screen size, defaulting to 100 dpi.
To override, set QT_QPA_EGLFS_PHYSICAL_WIDTH and QT_QPA_EGLFS_PHYSICAL_HEIGHT (in millimeters).
=> Construct A New CanBusWorker <- CanBusWorker::CanBusWorker(QObject*) "canbusworker.cpp" 5
=> Construct A New State ! <- waitForPluginAndInterface::waitForPluginAndInterface(CanBusWorkerDB*, quint32) "waitforpluginandinterface.cpp" 6
=> Construct A New State ! <- createDevice::createDevice(CanBusWorkerDB*) "createdevice.cpp" 6
=> Construct A New State ! <- connectDevice::connectDevice(CanBusWorkerDB*) "connectdevice.cpp" 6
=> Construct A New State <- readFrame::readFrame(CanBusWorkerDB*) "readframe.cpp" 6
=> Construct A New State <- writeFrame::writeFrame(CanBusWorkerDB*) "writeframe.cpp" 6
=> Construct A New State ! <- waitForErrorHandler::waitForErrorHandler(CanBusWorkerDB*, quint32) "waitforerrorhandler.cpp" 7
=> Enter State ... <- virtual void waitForPluginAndInterface::onEntry(QEvent*) "waitforpluginandinterface.cpp" 22
=> CanBusWorkerDB Initialized ! <- void CanBusWorkerDB::initialize() "canbusworkerdb.cpp" 20
=> Emit CanBusWorkerDB::requestPluginAndInterface <- waitForPluginAndInterface::waitForPluginAndInterface(CanBusWorkerDB*, quint32)::<lambda()> "waitforpluginandinterface.cpp" 13
=> Emit CanBusWorkerDB::requestPluginAndInterface <- waitForPluginAndInterface::waitForPluginAndInterface(CanBusWorkerDB*, quint32)::<lambda()> "waitforpluginandinterface.cpp" 13
=> Emit CanBusWorkerDB::requestPluginAndInterface <- waitForPluginAndInterface::waitForPluginAndInterface(CanBusWorkerDB*, quint32)::<lambda()> "waitforpluginandinterface.cpp" 13
=> Emit CanBusWorkerDB::requestPluginAndInterface <- waitForPluginAndInterface::waitForPluginAndInterface(CanBusWorkerDB*, quint32)::<lambda()> "waitforpluginandinterface.cpp" 13
=> Emit CanBusWorkerDB::requestPluginAndInterface <- waitForPluginAndInterface::waitForPluginAndInterface(CanBusWorkerDB*, quint32)::<lambda()> "waitforpluginandinterface.cpp" 13
=> Emit CanBusWorkerDB::requestPluginAndInterface <- waitForPluginAndInterface::waitForPluginAndInterface(CanBusWorkerDB*, quint32)::<lambda()> "waitforpluginandinterface.cpp" 13
=> Emit CanBusWorkerDB::requestPluginAndInterface <- waitForPluginAndInterface::waitForPluginAndInterface(CanBusWorkerDB*, quint32)::<lambda()> "waitforpluginandinterface.cpp" 13
=> Button Connect Clicked ! <- void MainWindow::on_pushButton_Connect_clicked() "mainwindow.cpp" 119
=> An External Signal Received ! <- void CanBusWorker::In(QVariant*, QVariant*) "canbusworker.cpp" 70
"=> CanBusWorkerDB::DataSet Parsed !" <- void CanBusWorker::In(QVariant*, QVariant*) "canbusworker.cpp" 89
=> case CanBusWorkerDB::replyPluginAndInterface
=> Enter State ... <- virtual void createDevice::onEntry(QEvent*) "createdevice.cpp" 11
"=> CanBusWorkerDB::Notification Parsed !" <- void MainWindow::In(QVariant*, QVariant*) "mainwindow.cpp" 65
=> case CanBusWorkerDB::DeviceCreated
=> Enter State ... <- virtual void connectDevice::onEntry(QEvent*) "connectdevice.cpp" 11
"=> DeviceStateChanged Emitted ! Current State Code : 1" <- createDevice::onEntry(QEvent*)::<lambda(QCanBusDevice::CanBusDeviceState)> "createdevice.cpp" 44
"=> DeviceStateChanged Emitted ! Current State Code : 2" <- createDevice::onEntry(QEvent*)::<lambda(QCanBusDevice::CanBusDeviceState)> "createdevice.cpp" 44
=> Successfully Connect Device !
=> Enter State ... <- virtual void readFrame::onEntry(QEvent*) "readframe.cpp" 11
"=> CanBusWorkerDB::Notification Parsed !" <- void MainWindow::In(QVariant*, QVariant*) "mainwindow.cpp" 65
=> case CanBusWorkerDB::DeviceConnected
=> An External Signal Received ! <- void CanBusWorker::In(QVariant*, QVariant*) "canbusworker.cpp" 70
"=> CanBusWorkerDB::DataSet Parsed !" <- void CanBusWorker::In(QVariant*, QVariant*) "canbusworker.cpp" 89
=> case CanBusWorkerDB::addAFrameIntoPendingFrameList
=> Enter State ... <- virtual void writeFrame::onEntry(QEvent*) "writeframe.cpp" 11
=> Successfully Send A Frame ! <- virtual void FrameSent::onTransition(QEvent*) "framesent.cpp" 14
"   3 | 3239383732"
"=> CanBusWorkerDB::Notification Parsed !" <- void MainWindow::In(QVariant*, QVariant*) "mainwindow.cpp" 65
=> case CanBusWorkerDB::CanFrameTransmitted
=> An External Signal Received ! <- void CanBusWorker::In(QVariant*, QVariant*) "canbusworker.cpp" 70
"=> CanBusWorkerDB::DataSet Parsed !" <- void CanBusWorker::In(QVariant*, QVariant*) "canbusworker.cpp" 89
=> case CanBusWorkerDB::addAFrameIntoPendingFrameList
=> Enter State ... <- virtual void writeFrame::onEntry(QEvent*) "writeframe.cpp" 11
=> Successfully Send A Frame ! <- virtual void FrameSent::onTransition(QEvent*) "framesent.cpp" 14
"   85 | 3330303236"
"=> CanBusWorkerDB::Notification Parsed !" <- void MainWindow::In(QVariant*, QVariant*) "mainwindow.cpp" 65
=> case CanBusWorkerDB::CanFrameTransmitted
=> An External Signal Received ! <- void CanBusWorker::In(QVariant*, QVariant*) "canbusworker.cpp" 70
"=> CanBusWorkerDB::DataSet Parsed !" <- void CanBusWorker::In(QVariant*, QVariant*) "canbusworker.cpp" 89
=> case CanBusWorkerDB::addAFrameIntoPendingFrameList
=> Enter State ... <- virtual void writeFrame::onEntry(QEvent*) "writeframe.cpp" 11
=> Successfully Send A Frame ! <- virtual void FrameSent::onTransition(QEvent*) "framesent.cpp" 14
"   57 | 3230323739"
"=> CanBusWorkerDB::Notification Parsed !" <- void MainWindow::In(QVariant*, QVariant*) "mainwindow.cpp" 65
=> case CanBusWorkerDB::CanFrameTransmitted
=> An External Signal Received ! <- void CanBusWorker::In(QVariant*, QVariant*) "canbusworker.cpp" 70
"=> CanBusWorkerDB::DataSet Parsed !" <- void CanBusWorker::In(QVariant*, QVariant*) "canbusworker.cpp" 89
=> case CanBusWorkerDB::addAFrameIntoPendingFrameList
=> Enter State ... <- virtual void writeFrame::onEntry(QEvent*) "writeframe.cpp" 11
=> Successfully Send A Frame ! <- virtual void FrameSent::onTransition(QEvent*) "framesent.cpp" 14
"   12 | 3239353433"
"=> CanBusWorkerDB::Notification Parsed !" <- void MainWindow::In(QVariant*, QVariant*) "mainwindow.cpp" 65
=> case CanBusWorkerDB::CanFrameTransmitted
=> Enter State ... <- virtual void waitForPluginAndInterface::onEntry(QEvent*) "waitforpluginandinterface.cpp" 22
=> CanBusWorkerDB Initialized ! <- void CanBusWorkerDB::initialize() "canbusworkerdb.cpp" 20
"=> DeviceStateChanged Emitted ! Current State Code : 0" <- createDevice::onEntry(QEvent*)::<lambda(QCanBusDevice::CanBusDeviceState)> "createdevice.cpp" 44
=> Emit CanBusWorkerDB::requestPluginAndInterface <- waitForPluginAndInterface::waitForPluginAndInterface(CanBusWorkerDB*, quint32)::<lambda()> "waitforpluginandinterface.cpp" 13
=> Emit CanBusWorkerDB::requestPluginAndInterface <- waitForPluginAndInterface::waitForPluginAndInterface(CanBusWorkerDB*, quint32)::<lambda()> "waitforpluginandinterface.cpp" 13
=> Emit CanBusWorkerDB::requestPluginAndInterface <- waitForPluginAndInterface::waitForPluginAndInterface(CanBusWorkerDB*, quint32)::<lambda()> "waitforpluginandinterface.cpp" 13
QStateMachine::start(): already running
=> Emit CanBusWorkerDB::requestPluginAndInterface <- waitForPluginAndInterface::waitForPluginAndInterface(CanBusWorkerDB*, quint32)::<lambda()> "waitforpluginandinterface.cpp" 13
=> Emit CanBusWorkerDB::requestPluginAndInterface <- waitForPluginAndInterface::waitForPluginAndInterface(CanBusWorkerDB*, quint32)::<lambda()> "waitforpluginandinterface.cpp" 13
=> Emit CanBusWorkerDB::requestPluginAndInterface <- waitForPluginAndInterface::waitForPluginAndInterface(CanBusWorkerDB*, quint32)::<lambda()> "waitforpluginandinterface.cpp" 13
=> Emit CanBusWorkerDB::requestPluginAndInterface <- waitForPluginAndInterface::waitForPluginAndInterface(CanBusWorkerDB*, quint32)::<lambda()> "waitforpluginandinterface.cpp" 13
